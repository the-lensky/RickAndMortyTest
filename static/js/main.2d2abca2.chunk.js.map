{"version":3,"sources":["components/Button/index.jsx","components/SearchInput/index.jsx","assets/logo.svg","components/Header/index.jsx","components/ContentList/index.jsx","components/FetchMoreButton/index.jsx","components/App.jsx","hooks/useFetchContent.js","index.jsx"],"names":["Button","props","className","SearchInput","onSearch","useState","value","setValue","onSearchChange","useCallback","e","target","onSubmit","onChange","onClick","Header","info","src","logo","alt","ContentList","content","loading","map","char","id","name","status","species","gender","image","FetchMoreButton","App","setLoading","setInfo","imgList","setImgList","fetchData","a","fetch","response","json","data","results","slice","window","scrollTo","console","log","next","moreImg","useFetchContent","fetchMore","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d2abca2.chunk.js","sourcesContent":["import \"./index.css\";\r\n\r\nconst Button = (props) => (\r\n  <button className=\"Button\" {...props} />\r\n);\r\n\r\nexport default Button;\r\n","import { useCallback, useState } from 'react'\r\nimport Button from '../Button'\r\nimport './index.css'\r\n\r\nconst SearchInput = ({onSearch}) => {\r\n    const [value, setValue] = useState('')\r\n\r\n    const onSearchChange = useCallback((e) => setValue(e.target.value), [])\r\n    const onSubmit = useCallback(() => onSearch(value), [value, onSearch])\r\n\r\n    return (\r\n        <div className=\"SearchInput\">\r\n            <input value={value} onChange={onSearchChange}/>\r\n            <Button onClick={onSubmit}>Submit</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchInput\r\n","export default __webpack_public_path__ + \"static/media/logo.e1f86449.svg\";","import SearchInput from '../SearchInput'\r\nimport logo from '../../assets/logo.svg'\r\nimport './index.css'\r\n\r\nconst Header = ({onSearch, info}) => (\r\n    <header className=\"Header\">\r\n        <img src={logo} className=\"Header-logo\" alt=\"logo\"/>\r\n        <SearchInput onSearch={onSearch}/>\r\n\r\n    </header>\r\n)\r\n\r\nexport default Header\r\n","import './ContentList.css'\r\n\r\nconst ContentList = ({content, loading}) => {\r\n\r\n    return (\r\n        <div className='content-list'>\r\n            <h1>Simple content list</h1>\r\n            <ul className='content-container'>\r\n                {\r\n                    !loading\r\n                        ? (\r\n                            content\r\n                                ? content.map(char => {\r\n                                    const {id, name, status, species, gender, image} = char\r\n                                    return (\r\n                                        <li key={id} className='char-card'>\r\n                                            <div className='char-data'>\r\n                                                <h3> {name}</h3>\r\n                                                <p>status: {status}</p>\r\n                                                <p>species: {species}</p>\r\n                                                <p>gender: {gender}</p>\r\n                                            </div>\r\n                                            <div>\r\n                                                <img src={image} alt={name}/>\r\n                                            </div>\r\n                                        </li>\r\n                                    )\r\n                                })\r\n                                : <h1>Sorry pal, there no character with that name</h1>\r\n                        )\r\n                        : <h1>LOADNIG...</h1>\r\n                }\r\n\r\n            </ul>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ContentList\r\n","import './index.css'\r\n\r\nconst FetchMoreButton = (props) => (\r\n    <button className=\"fetchMoreButton\" {...props} />\r\n)\r\n\r\nexport default FetchMoreButton\r\n","import Header from './Header'\r\nimport ContentList from './ContentList'\r\nimport { useFetchContent } from '../hooks/useFetchContent'\r\nimport './App.css'\r\nimport { useEffect } from 'react'\r\nimport FetchMoreButton from './FetchMoreButton'\r\n\r\n\r\nconst App = () => {\r\n    const [imgList, fetchData, fetchMore,info] = useFetchContent()\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Header onSearch={fetchData} info={info}/>\r\n            <ContentList content={imgList} fetchMore={fetchMore}/>\r\n            {\r\n                imgList && info?.next\r\n                    ? <FetchMoreButton onClick={fetchMore}>Fetch More </FetchMoreButton>\r\n                    : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import { useCallback, useState } from 'react'\r\n\r\n\r\nexport const useFetchContent = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [info, setInfo] = useState({})\r\n    const [imgList, setImgList] = useState([])\r\n    const fetchData = useCallback(async (value) => {\r\n        try {\r\n            if (!value) {\r\n                setLoading(true)\r\n                const response = await fetch(`https://rickandmortyapi.com/api/character/`)\r\n                const data = await response.json()\r\n                setInfo(data.info)\r\n                setImgList(data.results.slice(0, 10))\r\n                window.scrollTo(0, 0)\r\n                setLoading(false)\r\n            } else {\r\n                setLoading(true)\r\n                const response = await fetch(`https://rickandmortyapi.com/api/character/?name=${value}`)\r\n                const data = await response.json()\r\n                setInfo(data.info)\r\n                setImgList(data.results)\r\n                window.scrollTo(0, 0)\r\n                setLoading(false)\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.log(e, 'ОШИБОЧКА')\r\n        }\r\n    }, [imgList])\r\n\r\n    const fetchMoreData = async () => {\r\n        setLoading(true)\r\n        const response = await fetch(`${info.next}`)\r\n        const data = await response.json()\r\n        const moreImg = data.results.slice(0, 10)\r\n        setInfo(data.info)\r\n        setImgList([...imgList, ...moreImg])\r\n        console.log(info.next)\r\n        console.log(imgList, moreImg)\r\n        setLoading(false)\r\n    }\r\n\r\n    return [imgList, fetchData, fetchMoreData, info, loading]\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}